package bharati.binita.storm.trident.eg1;

import storm.trident.Stream;
import storm.trident.TridentTopology;
import backtype.storm.Config;
import backtype.storm.StormSubmitter;
import backtype.storm.generated.AlreadyAliveException;
import backtype.storm.generated.InvalidTopologyException;
import backtype.storm.generated.StormTopology;
import backtype.storm.tuple.Fields;

/**
 * 
 * @author binita.bharati@gmail.com
 * Illustration of the concept of a Trident batch.
 * -All tuples in a batch should fulfill a criteria. Then only the trxn is considered as success, else it is not.
 * (Trxn Ids are auto-generated by Trident)
 * -On trxn success, success method in Spout's BatchCoordinator and Emitter will be invoked.
 * 
 *
 */

public class ExampleTopology {
	
	public static StormTopology buildTopology()
	
	{
		TridentTopology topology = new TridentTopology();
		Spout spout1 = new Spout();
		
		Stream inputStream = topology.newStream("faltu", spout1);//faltu isnt used anywhere.
		
		 inputStream
		    .each(new Fields("myTuple"),new Function(), new Fields());
		 
		 return topology.build();
	}

	public static void main(String[] args) throws Exception {
		
		Config conf = new Config();

		StormSubmitter.submitTopology("trident-eg1", conf,
        		buildTopology());
	
	}

}
